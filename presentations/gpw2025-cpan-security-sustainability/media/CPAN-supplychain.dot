// This file can be generated with https://dreampuf.github.io/GraphvizOnline/
// or https://sketchviz.com/

// This file is © Salve J. Nilsen <sjn@cpan.org>. Some rights reserved.
// You may use, modify and share this file under the terms of the CC-BY-SA-4.0 license.

digraph CPANSupplyChain {
  node [style=filled,color=white,shape=rect];
  graph [color=grey80,style=filled];

  subgraph cluster_author {
    label = "Author";

    "git push";
    "pause upload";

    subgraph cluster_sbom_author {
        color="grey70";
        label = "SBOM::Author";
        "field1"; "field2";
    }
  }

  subgraph cluster_repository {
    label = "Central git repository";

    // From Author
    "git push" -> "git@github.com/author/foo-bar.git";

    subgraph cluster_sbom_repository {
        color="grey70";
        label = "SBOM::Repository";
        "field3"; "field4";
    }
  }

//  subgraph cluster_apt_ecosystem {
//    label = "The APT/Debian ecosystem";
//    color="grey90";
//
//    subgraph cluster_packager_apt {
//      label = "Packager (DPKG)";
//      color="grey80";
//
//      // From Repository
//      "libfoobar-perl-1.0.dpkg";
//
//      // From Patcher
//      "libfoobar-perl-1.0-patch.dpkg"
//
//      subgraph cluster_sbom_packager {
//        color="grey70";
//        label = "SBOM::Packager";
//        "field5"; "field6";
//      }
//    }
//
//    subgraph cluster_curator_apt {
//      label = "Curator (APT)";
//      color="grey80";
//
//      "apt pin libfoobar-perl";
//
//      // From upstream APT repo
//      "pkg:apt/ubuntu/libfoobar-perl@1.0" -> "pkg:apt/ubuntu/libfoobar-perl@1.0?repository_url=apt.mycorp.example";
//
//      subgraph cluster_sbom_curator_apt {
//          color="grey70";
//          label = "SBOM::Curator";
//          "field17"; "field18";
//      }
//    }
//
//    subgraph cluster_patcher_apt {
//      label = "Patcher (DPKG)";
//      color="grey80";
//
//      // From Curator
//      "apt pin libfoobar-perl" -> "foo-bar-1.0-security.patch";
//
//      // From Developer
//      "My::App" -> "foo-bar-1.0-security.patch";
//
//      subgraph cluster_sbom_patcher_apt {
//          color="grey70";
//          label = "SBOM::Patcher";
//          "field9"; "field10";
//      }
//    }
//
//    subgraph cluster_distributor_apt {
//      label = "Distributor (APT)";
//      color="grey80";
//
//      "pkg:apt/ubuntu/libfoobar-perl@1.0";
//      "pkg:apt/ubuntu/libfoobar-perl@1.0?repository_url=apt.mycorp.example";
//
//      subgraph cluster_sbom_distributor_apt {
//          color="grey70";
//          label = "SBOM::Distributor";
//          "field13"; "field14";
//      }
//    }
//  } // cluster_apt_ecosystem

  subgraph cluster_cpan_ecosystem {
    label = "The CPAN Ecosystem";
    color="grey90";

    subgraph cluster_patcher_cpan {
      label = "Patcher (CPAN)";
      color="grey80";

      // From Author
      "My::App" -> "Foo::Bar-1.0-security.patch" ;

      subgraph cluster_sbom_patcher_cpan {
        color="grey70";
        label = "SBOM::Patcher";
        "field7"; "field8";
      }
    }

    subgraph cluster_curator_cpan {
      label = "Curator (CPAN)";
      color="grey80";

      // From upstream Distributor
      "pkg:cpan/AUTHOR/Foo-Bar@1.0" -> "pkg:cpan/AUTHOR/Foo-Bar?repository_url=cpan.mycorp.example" [label="cpan pin"];

      subgraph cluster_sbom_curator_cpan {
          color="grey70";
          label = "SBOM::Curator";
          "field15"; "field16";
      }
    }

    subgraph cluster_distributor_cpan {
      label = "Distributor (CPAN)";
      color="grey80";

      // From Author
      "pause upload" -> "AUTHOR/Foo-Bar-1.0.tar.gz";
      "pause upload" -> "pkg:cpan/AUTHOR/Foo-Bar@1.0?repository_url=cpan.mycorp.example";

      // From Patcher
      "Foo::Bar-1.0-security.patch" -> "AUTHOR/Foo-Bar-1.0-patch.tar.gz";
      "Foo::Bar-1.0-security.patch" -> "pkg:cpan/AUTHOR/Foo-Bar@1.0-patch?repository_url=cpan.mycorp.example";

      subgraph cluster_sbom_distributor_cpan {
        color="grey70";
        label = "SBOM::Distributor";
        "field11"; "field12";
      }
    }
  } // cluster_cpan_ecosystem

  subgraph cluster_developer {
    label = "Developer";

    // From local APT distributor
    "pkg:apt/ubuntu/libfoobar-perl?repository_url=apt.mycorp.example" -> "My::App";

    // From local CPAN distributor
    "pkg:cpan/AUTHOR/Foo-Bar?repository_url=cpan.mycorp.example" -> "My::App";

    subgraph cluster_developer_sbom {
        color="grey70";
        label = "SBOM::Developer";
        "field19"; "field20";
    }
  }

  subgraph cluster_reviewer {
    // Security reviewer does active pen/sec testing of components
    label = "Reviewer";

    "pentest approve my-app";

    subgraph cluster_reviewer_sbom {
        color="grey70";
        label = "SBOM::Reviewer";
        "field21"; "field22";
    }
  }

  subgraph cluster_tester {
    label = "Quality Assurance / Tester";

    "prove ./my-app";

    subgraph cluster_tester_sbom {
        color="grey70";
        label = "SBOM::Tester";
        "field23"; "field24";
    }
  }

  subgraph cluster_secops {
    label = "SecOps";

    "cpan-audit ./my-app";

    subgraph cluster_secops_sbom {
        color="grey70";
        label = "SBOM::SecOps";
        "field25"; "field26";
    }
  }

  subgraph cluster_deployer {
    label = "Deployer";

    "carton install --deployment ./my-app";

    subgraph cluster_deployer_sbom {
        color="grey70";
        label = "SBOM::Deployer";
        "field27"; "field28";
    }
  }

  subgraph cluster_consumer {
    label = "Consumer";

    subgraph cluster_consumer_sbom {
        color="grey70";
        label = "SBOM::Consumer";
        "field29"; "field30";
    }
  }

  subgraph cluster_auditor {
    label = "Auditor";

    subgraph cluster_auditor_sbom {
        color="grey70";
        label = "SBOM::Auditor";
        "field31"; "field32";
    }
  }

  // Owner – Has the legal owership rights for the dist (e.g a business, or the author)

  // Author – The initial and/or main creator of the component in question. Typically works on all aspects of the code, including features, bugfixes, tests and security issues. Has the final say on the original contents of the package. The Author _can_ be a group of people, though a single point of responsibility is common. If an Author has upstream (reverse) dependencies, the Author is also considered to be a Developer (as seen from the upstream Author's perspective. See below).
  "git push" -> "git@github.com/author/foo-bar.git";
  "pause upload" -> "AUTHOR/Foo-Bar-1.0.tar.gz";

  // Steward – An type of Author with reduced responsibilities. Ensures the ongoing quality of the code. Typically only works on security issues and bugfixes. Usually doesn't work on new features. Works with the Author primarily, and may take responsiblity on their behalf when security and bugs are concerned.

  // Custodian – A type of Steward with reduced responsibilities. Cares about the ongoing security of the code. Typically only conserned with updating dependencies or applying security fixes. Works with the Author primarily, and may take responsibility on their behalf when it comes to security concerns.

  // Publisher – Places the component on an ecosystem publishing platform, on behalf of the Author, Steward or Custodian. Typically this role is done by the same people, but in some cases a separate account may be used; e.g. a business or organization account.

  // Patcher – Applies security and bugfixes to distributed native packages. Works mainly with the Packager, and is downstream of the Author. This task is only necessary if upstream (Author, Steward or Custodian) roles are not responsive or available, or when downstream constraints requirements call for it (e.g. when backporting of fixes are needed due to downstream version pinning).
  //"foo-bar-1.0-security.patch" -> "libfoobar-perl-1.0-patch.dpkg";
  "Foo::Bar-1.0-security.patch" -> "AUTHOR/Foo-Bar-1.0-patch.tar.gz";

  // Packager – Builds and creates native packages from a dist received from upstream, optionally with patches applied from the Patcher. Concerns themselves with correct package format and structure, and that package metadata is preserved and updated.
  "AUTHOR/Foo-Bar-1.0.tar.gz" -> "libfoobar-perl-1.0.dpkg";
  "git@github.com/author/foo-bar.git" -> "libfoobar-perl-1.0.dpkg";

  // Curator – Selects or pins which releases are suitable for use within an organization. Concerns themselves with both the stability and predictability of components, and how this is prioritized against the need for features, bugfixes and security updates.
  //"apt pin libfoobar-perl" -> "pkg:apt/ubuntu/libfoobar-perl";
  "cpan pin AUTHOR/Foo-Bar-1.0.tar.gz" -> "AUTHOR/Foo-Bar-1.0.tar.gz";

  // Distributor – Ensures the availability of packages, that they are indexed correctly, and that any related metadata is up-to-date, correct and available.

  // Developer — Uses packages and components as dependencies in their own project or product. A Developer is considered to be identical to an Author from the upstream (Author's) perspective. A common difference from an Author is that a Developer doesn't publish their work as Open Source.

  // Deployer – Final preparation and installation of the software into production environment.

  // Consumer – The software in use in production

  // Scanner – Runtime and static security checks; Vulnerability monitoring, etc.
  
  // Auditor / Compliance – Verifies that all necessary metadata is available, up-to-date and made use of.

}

// vim: ts=2 et
